import base64
import xml.etree.ElementTree as ET

# Example: paste the SOAP XML response into this string
soap_response = """
<env:Envelope xmlns:env="http://www.w3.org/2003/05/soap-envelope">
   <env:Header/>
   <env:Body>
      <ns2:runReportResponse xmlns:ns2="http://xmlns.oracle.com/oxp/service/PublicReportService">
         <ns2:runReportReturn>
            <ns2:reportBytes></ns2:reportBytes>
            <ns2:reportContentType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</ns2:reportContentType>
            <ns2:reportFileID xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <ns2:reportLocale xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <ns2:metaDataList xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </ns2:runReportReturn>
      </ns2:runReportResponse>
   </env:Body>
</env:Envelope>
"""

# Parse the SOAP response
ns = {
    "soap": "http://www.w3.org/2003/05/soap-envelope",
    "pub": "http://xmlns.oracle.com/oxp/service/PublicReportService"
}
root = ET.fromstring(soap_response)

# Find the <reportBytes> element
report_bytes_element = root.find(".//pub:reportBytes", ns)
if report_bytes_element is not None:
    base64_data = report_bytes_element.text

    # Decode Base64 → binary Excel file
    excel_data = base64.b64decode(base64_data)

    # Save to .xlsx file
    with open("report.xlsx", "wb") as f:
        f.write(excel_data)

    print("✅ Excel file saved as report.xlsx")
else:
    print("❌ Could not find <reportBytes> in SOAP response")
